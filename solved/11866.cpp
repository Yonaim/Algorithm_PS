/*
시간도 메모리 제한도 넉넉하니까 그냥 처음부터 순서대로 하면 될 거 같은데?
이것도 브루트 포스로 취급하나? 무튼.

...헐? 이게 큐였다고?.....잠.....만....
아. 죽은 사람을 바로 큐에서 제거해버리는건가?
근데 큐를 사용하면 무슨 의미가 있는거지? 죽어야하는 사람이 중간에 껴있으면?

아ㅏㅏㅏㅏ 데이터가 움직여야하는거구나. k번 뒤로 넘겨주기. (pop + push) 
그리고 k번 넘겼을 때 맨 앞에 있는 사람이 죽을 사람임.
그 사람은 큐의 맨 앞에 있으니까 처리가 손쉬움.
계속 빙글빙글 돌면서 순회해야하는데 순회하는 중간에 데이터를 빼거나 넣고 싶을때 큐를 이용하는거구나!

원형이라고 되어있어서 헷갈렸는데, 순회하면 큐. 이렇게 생각해야겠다
*/

#include <stdio.h>
#include <queue>

int main()
{
	int N, K;
	std::queue<int> Q;
	int move, dead;

	scanf("%d %d", &N, &K);
	for (int i = 1; i <= N; i++)
		Q.push(i);

	printf("<");
	while (Q.size() > 0)
	{
		for (int i = 1; i < K; i++)
			// 현재 기준으로 맨 앞에서 K번째 사람이 찾고 싶은 것이므로
			// i = 1부터 시작한다. (K - 1번 뒤로 보내기)
		{
			Q.push(Q.front());
			Q.pop();
		}	
		if (Q.size() == 1)
			printf("%d", Q.front());
		else
			printf("%d, ", Q.front());
		Q.pop();
	}
	printf(">\n");
}